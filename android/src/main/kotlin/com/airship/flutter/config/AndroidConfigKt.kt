//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: config.proto

package com.airship.flutter.config

@kotlin.jvm.JvmSynthetic
inline fun androidConfig(block: com.airship.flutter.config.AndroidConfigKt.Dsl.() -> kotlin.Unit): com.airship.flutter.config.Config.AndroidConfig =
  com.airship.flutter.config.AndroidConfigKt.Dsl._create(com.airship.flutter.config.Config.AndroidConfig.newBuilder()).apply { block() }._build()
object AndroidConfigKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.airship.flutter.config.Config.AndroidConfig.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.airship.flutter.config.Config.AndroidConfig.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.airship.flutter.config.Config.AndroidConfig = _builder.build()

    /**
     * <pre>
     *&#47; App store URI
     * </pre>
     *
     * <code>string app_store_uri = 1;</code>
     */
    var appStoreUri: kotlin.String
      @JvmName("getAppStoreUri")
      get() = _builder.appStoreUri
      @JvmName("setAppStoreUri")
      set(value) {
          _builder.appStoreUri = value
      }
    /**
     * <pre>
     *&#47; App store URI
     * </pre>
     *
     * <code>string app_store_uri = 1;</code>
     */
    fun clearAppStoreUri() {
      _builder.clearAppStoreUri()
    }

    /**
     * <pre>
     *&#47; Fcm app name if using multiple FCM projects.
     * </pre>
     *
     * <code>string fcm_firebase_app_name = 2;</code>
     */
    var fcmFirebaseAppName: kotlin.String
      @JvmName("getFcmFirebaseAppName")
      get() = _builder.fcmFirebaseAppName
      @JvmName("setFcmFirebaseAppName")
      set(value) {
          _builder.fcmFirebaseAppName = value
      }
    /**
     * <pre>
     *&#47; Fcm app name if using multiple FCM projects.
     * </pre>
     *
     * <code>string fcm_firebase_app_name = 2;</code>
     */
    fun clearFcmFirebaseAppName() {
      _builder.clearFcmFirebaseAppName()
    }

    /**
     * <pre>
     *&#47; Notification config.
     * </pre>
     *
     * <code>.AndroidNotificationConfig notification = 3;</code>
     */
    var notification: com.airship.flutter.config.Config.AndroidNotificationConfig
      @JvmName("getNotification")
      get() = _builder.notification
      @JvmName("setNotification")
      set(value) {
          _builder.notification = value
      }
    /**
     * <pre>
     *&#47; Notification config.
     * </pre>
     *
     * <code>.AndroidNotificationConfig notification = 3;</code>
     */
    fun clearNotification() {
      _builder.clearNotification()
    }
    /**
     * <pre>
     *&#47; Notification config.
     * </pre>
     *
     * <code>.AndroidNotificationConfig notification = 3;</code>
     * @return Whether the notification field is set.
     */
    fun hasNotification(): kotlin.Boolean {
      return _builder.hasNotification()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.airship.flutter.config.Config.AndroidConfig.copy(block: com.airship.flutter.config.AndroidConfigKt.Dsl.() -> kotlin.Unit): com.airship.flutter.config.Config.AndroidConfig =
  com.airship.flutter.config.AndroidConfigKt.Dsl._create(this.toBuilder()).apply { block() }._build()
